from pypendency.argument import Argument
from pypendency.builder import container_builder
from pypendency.definition import Definition


def load() -> None:
    container_builder.set_definition(
        Definition(
            "infrastructure.kafka.kafka_topic_creator.KafkaTopicCreator",
            "infrastructure.kafka.kafka_topic_creator.KafkaTopicCreator",
            [
                Argument.no_kw_argument("@confluent_kafka.admin.AdminClient"),
            ],
        )
    )
    container_builder.set_definition(
        Definition(
            "infrastructure.kafka.kafka_command_tracking_consumer.KafkaCommandTrackingConsumer",
            "infrastructure.kafka.kafka_command_tracking_consumer.KafkaCommandTrackingConsumer",
            [
                Argument.no_kw_argument("@infrastructure.kafka.kafka_consumer_creator.KafkaConsumerCreator"),
                Argument.no_kw_argument(
                    "@infrastructure.bus_station.command_tracking_json_deserializer.CommandTrackingJSONDeserializer"
                ),
                Argument.no_kw_argument("@infrastructure.kafka.kafka_topic_creator.KafkaTopicCreator"),
                Argument.no_kw_argument("@confluent_kafka.cimpl.Producer"),
                Argument.no_kw_argument(
                    "@bus_station.command_terminal.bus.synchronous.sync_command_bus.SyncCommandBus"
                ),
                Argument.no_kw_argument("@logging.Logger"),
            ],
        )
    )
    container_builder.set_definition(
        Definition(
            "infrastructure.kafka.kafka_event_tracking_consumer.KafkaEventTrackingConsumer",
            "infrastructure.kafka.kafka_event_tracking_consumer.KafkaEventTrackingConsumer",
            [
                Argument.no_kw_argument("@infrastructure.kafka.kafka_consumer_creator.KafkaConsumerCreator"),
                Argument.no_kw_argument(
                    "@infrastructure.bus_station.event_tracking_json_deserializer.EventTrackingJSONDeserializer"
                ),
                Argument.no_kw_argument("@infrastructure.kafka.kafka_topic_creator.KafkaTopicCreator"),
                Argument.no_kw_argument("@confluent_kafka.cimpl.Producer"),
                Argument.no_kw_argument(
                    "@bus_station.command_terminal.bus.synchronous.sync_command_bus.SyncCommandBus"
                ),
                Argument.no_kw_argument("@logging.Logger"),
            ],
        )
    )
    container_builder.set_definition(
        Definition(
            "infrastructure.kafka.kafka_query_tracking_consumer.KafkaQueryTrackingConsumer",
            "infrastructure.kafka.kafka_query_tracking_consumer.KafkaQueryTrackingConsumer",
            [
                Argument.no_kw_argument("@infrastructure.kafka.kafka_consumer_creator.KafkaConsumerCreator"),
                Argument.no_kw_argument(
                    "@infrastructure.bus_station.query_tracking_json_deserializer.QueryTrackingJSONDeserializer"
                ),
                Argument.no_kw_argument("@infrastructure.kafka.kafka_topic_creator.KafkaTopicCreator"),
                Argument.no_kw_argument("@confluent_kafka.cimpl.Producer"),
                Argument.no_kw_argument(
                    "@bus_station.command_terminal.bus.synchronous.sync_command_bus.SyncCommandBus"
                ),
                Argument.no_kw_argument("@logging.Logger"),
            ],
        )
    )
